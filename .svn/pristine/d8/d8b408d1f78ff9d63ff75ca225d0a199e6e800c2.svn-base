package com.gov.nha.bis.server.controller;

import java.util.HashMap;
import java.util.Locale;

import javax.annotation.PostConstruct;
import javax.servlet.http.HttpServletRequest;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.gov.nha.bis.server.model.State;
import com.gov.nha.bis.server.properties.ApplicationConstantConfig;
import com.gov.nha.bis.server.rest.service.MasterDataService;
import com.gov.nha.bis.server.rest.service.TmsMasterService;

@CrossOrigin
@Controller
public class MasterDataController {

	private static final Logger logger = LogManager.getLogger(MasterDataController.class);

	@Autowired
	public ApplicationConstantConfig applicationConstantConfig;

	@Autowired
	public TmsMasterService tmsMasterService;

	private HashMap<String, String> stateMap;

	private static HashMap<String, String> newstateMap = new HashMap<String, String>();;


	public HashMap<String, String> getStateMap() {
		return stateMap;
	}

	public void setStateMap(HashMap<String, String> stateMap) {
		this.stateMap = stateMap;
	}

	@RequestMapping(value="/urbanMaster",method = RequestMethod.POST)
	public @ResponseBody String ruralMasterSearch(HttpServletRequest request,@ModelAttribute("stateDetails") State stateDetails,
			ModelMap model,Locale locale)
	{
		ObjectMapper mapper = new ObjectMapper();
		HashMap<String, String> stateMap = new  HashMap<String, String> ();

		if(stateDetails.getModeFlag().equalsIgnoreCase("S")){

			stateMap=MasterDataService.getStateList(null, null, null, null, null, "S",applicationConstantConfig.STATE_MASTER_RURAL_URL);

		}else if(stateDetails.getModeFlag().equalsIgnoreCase("D")){
			stateMap=MasterDataService.getStateList(stateDetails.getStateCode(), null, null, null, null, "D",applicationConstantConfig.STATE_MASTER_RURAL_URL);

		}else if(stateDetails.getModeFlag().equalsIgnoreCase("B")){

			stateMap=MasterDataService.getStateList(stateDetails.getStateCode(), stateDetails.getDistrictCode(), null, null, null, "B",applicationConstantConfig.STATE_MASTER_RURAL_URL);

		}else if(stateDetails.getModeFlag().equalsIgnoreCase("V")){

			stateMap=MasterDataService.getStateList(stateDetails.getStateCode(), stateDetails.getDistrictCode(), String.valueOf(stateDetails.getBlockCode()), null, null, "V",applicationConstantConfig.STATE_MASTER_RURAL_URL);

		}

		String json = "";
		try {
			json = mapper.writeValueAsString(stateMap);
		} catch (JsonProcessingException e) {
			// TODO Auto-generated catch block
			logger.info(e.getMessage());
		}
		return json;

	}


	@GetMapping(value="/getstateMaster")
	public @ResponseBody String getstateMaster(Model model) {
		try {
			ObjectMapper mapper = new ObjectMapper();
			return mapper.writeValueAsString(newstateMap);	
		} catch (Exception e) {
			return null;
		}
	}
	
	
	@PostConstruct
	public @ResponseBody String getstateMasterFromDb() {
		String response= null;
		response= tmsMasterService.getstateMasterFromDb();
		return response;			
	}

}
